chmod +x cloudlab-setup-ubuntu-tl.sh && ./cloudlab-setup-ubuntu-tl.sh && \
sudo apt-get install libvirt-daemon genisoimage libguestfs-tools libosinfo-bin virtinst qemu-kvm git vim net-tools wget curl bash-completion python-pip libvirt-daemon-system virt-manager bridge-utils libnss-libvirt libvirt-clients osinfo-db-tools intltool sshpass p7zip-full p7zip-rar uvtool dnsmasq -y && \
sudo sed -i 's/hosts:          files dns/hosts:          files libvirt libvirt_guest dns/' /etc/nsswitch.conf && sudo lsmod | grep kvm && sudo reboot
#sudo systemctl restart libvirtd && sudo systemctl status libvirtd

screen
# Press Return to continue
# detach from session without killing it: Ctrl a d 
# to see screen sessions: screen -ls
# detach from closed session: screen -d -r 2055.pts-0.node0
# enter session: screen -r 2055.pts-0.node0
# exit a session and terminate it: exit

sudo apt update -y && sudo apt install cockpit -y && sudo systemctl enable --now cockpit.socket && sudo apt install cockpit-machines -y && echo "root:gprm8350" | sudo chpasswd
exit

sudo -i

cd /mnt/extra && cat /sys/module/kvm_intel/parameters/nested && cat /proc/cpuinfo | awk '/^processor/{print $3}' | wc -l && free -h && df -hT && sudo virsh list --all && sudo brctl show && \
wget -O "/mnt/extra/osinfo-db.tar.xz" https://releases.pagure.org/libosinfo/osinfo-db-20240523.tar.xz && sudo osinfo-db-import --local "/mnt/extra/osinfo-db.tar.xz"

# Install dependencies
sudo apt update -y && sudo apt-get install apt-transport-https ca-certificates curl gnupg python3-venv -y && \
sudo usermod -aG libvirt `id -un` && sudo adduser `id -un` libvirt-qemu && sudo adduser `id -un` kvm && sudo adduser `id -un` libvirt-dnsmasq && sudo sed -i 's/0770/0777/' /etc/libvirt/libvirtd.conf && \
echo 0 | sudo tee /sys/module/kvm/parameters/halt_poll_ns && echo 'security_driver = "none"' | sudo tee /etc/libvirt/qemu.conf && sudo chmod 0644 /boot/vmlinuz* && \
sudo systemctl restart libvirtd && sudo systemctl status libvirtd

exit

sudo -i

virsh list --all && virsh net-list --all && virsh pool-list && python3 --version && python --version

########################################################################################################################################################################
####################### kcli (https://github.com/karmab/kcli) ########################################################################################################
####  https://www.linkedin.com/pulse/kcli-only-tool-you-need-create-kubernetes-openshift-banerjee?trk=pulse-article_more-articles_related-content-card ##########  
########################################################################################################################################################################

mkdir -p $HOME/.kcli

ssh-keygen -t rsa -N '' -f $HOME/.ssh/id_rsa

curl https://raw.githubusercontent.com/karmab/kcli/master/install.sh | sudo bash

alias kcli='sudo kcli'

mkdir -p /mnt/extra/virt && kcli create pool -p /mnt/extra/virt default && kcli create network -c 192.168.254.0/24 service && \
kcli list images && kcli list vms && kcli list pools && mkdir -p kclilabs && cd kclilabs

kcli create vm -i centos9stream -P memory=327680 -P numcpus=60 -P disks=['{"size": 1300, "interface": "sata"}'] -P nets=[service] -P cmds=['sudo yum -y update && sudo yum -y install vim'] ocp
kcli ssh ocp

### Deployment of OpenStack K8S with operators - proof of concept environment
### https://qiita.com/xotaki/items/ca3a4a3cfafa45d84d17

mkdir -p ~/bin/ && sudo dnf install -y git wget jq make tmux golang go-toolset httpd-tools && \
sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

git clone https://github.com/openstack-k8s-operators/install_yamls.git && cd install_yamls/devsetup

# Go to: https://cloud.redhat.com/openshift/install/pull-secret
cat > ~/install_yamls/devsetup/pull-secret.txt << EOF
{"auths":{"cloud.openshift.com":{"auth":"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K3ZwYXNpYXMxd3pzam52bmJjcWR2cGFid2YydGMycmFrNWg6NzJEMDNSQlJBNEdBNk0wNE5MSEpKRDZaV0RWRFQyNzIyODNCNTEyR0tDVlZMMUJVWDkyWk1OS1JHSTRRREkxVA==","email":"pasiasv@gmail.com"},"quay.io":{"auth":"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K3ZwYXNpYXMxd3pzam52bmJjcWR2cGFid2YydGMycmFrNWg6NzJEMDNSQlJBNEdBNk0wNE5MSEpKRDZaV0RWRFQyNzIyODNCNTEyR0tDVlZMMUJVWDkyWk1OS1JHSTRRREkxVA==","email":"pasiasv@gmail.com"},"registry.connect.redhat.com":{"auth":"NTMwNjg1NTR8dWhjLTFXWnNKblZuYmNxRHZQYWJ3RjJ0QzJSQWs1SDpleUpoYkdjaU9pSlNVelV4TWlKOS5leUp6ZFdJaU9pSXpZV1EwTmpneU1XUXdPV1kwTTJVek9ESTFNR013TUdNMU9HTXlNelF3T1NKOS5qazJhdnVUSGFmX0pXZWlHZVNPVm1KQnZzZGtrcThMNzBYWHhvRGVlOGFOS21XbllPMWFzSU9ndXVoX25JWTVVTXlJMzk4cTJ6RnI3T0ZSbXBkckxiT3BTT1hJQXNkZzdIX3VmMjJ4RmV6UDREOEcwLUZiY2xkQ3AwejRiNlJVd3djd1E1elhFa0dEQ2VCNXlLVnRrUmFDeGYwZjhBWVlvMFlWNE44QVAtd0UxaDRiYktxOTc2LU9JVENqYmtKWHdYMlhWbE94Q2dyN09lMWhzR3NBc004UzBrRFJQZlhoejIzeXJ6RDBHdmxkdlFndGxkQXhNQUxXdWROZmN6ZEYyZFdWVV81cGdudkhHczk1cjZPbHQzNDUtaGVrc0lKU0F2SVU5NHpGSEl6ZklQTzVsc2pzN1lQaFBfZEQ2aExXUmVNWDFRX0x5MVdyMWNRcWxiejFfYm5mZ0FLUXZzdmVrUnZUckthaUhpZUJkNFhSNzVPVjJVQ2JpSzVYdmdyYmtaRFh3NGhhZnJJMUNiQ3VHeWx2LXgwNHI4NDlRcDFJTkozaDBQTlMtM1BxVVRDNzZRN1ZaVnRRT2JJLXc3WGtHZ1U0TngxMS1kZkVDbnNNUFZTR0VmS19NNlA3SEpTQkotZk9mYmhZVVYySDFETTYwYnJRZW42Y280Z1RxNThWUmtvUWE1SENPQ0RuTTdWVng2SjlsQXExOHNVdXdic3pUbXdRQ0R0dmZpMDl4eWxEV1pYeXlaVjM0dmZjNXJzb3dON0VIdFFKeU1LNTFucG5vNm1GWWx6bVRHM3ZUd1BtWi13UzhKZTI5bnlDTTlzMkVVdDA1NUNmcDZyMVd6Z0VCM2tlSVU2eFdXejdycFNFWG5XQVVNYXRBdWxhT0V0c3EwVmZMd2M5WG9uUQ==","email":"pasiasv@gmail.com"},"registry.redhat.io":{"auth":"NTMwNjg1NTR8dWhjLTFXWnNKblZuYmNxRHZQYWJ3RjJ0QzJSQWs1SDpleUpoYkdjaU9pSlNVelV4TWlKOS5leUp6ZFdJaU9pSXpZV1EwTmpneU1XUXdPV1kwTTJVek9ESTFNR013TUdNMU9HTXlNelF3T1NKOS5qazJhdnVUSGFmX0pXZWlHZVNPVm1KQnZzZGtrcThMNzBYWHhvRGVlOGFOS21XbllPMWFzSU9ndXVoX25JWTVVTXlJMzk4cTJ6RnI3T0ZSbXBkckxiT3BTT1hJQXNkZzdIX3VmMjJ4RmV6UDREOEcwLUZiY2xkQ3AwejRiNlJVd3djd1E1elhFa0dEQ2VCNXlLVnRrUmFDeGYwZjhBWVlvMFlWNE44QVAtd0UxaDRiYktxOTc2LU9JVENqYmtKWHdYMlhWbE94Q2dyN09lMWhzR3NBc004UzBrRFJQZlhoejIzeXJ6RDBHdmxkdlFndGxkQXhNQUxXdWROZmN6ZEYyZFdWVV81cGdudkhHczk1cjZPbHQzNDUtaGVrc0lKU0F2SVU5NHpGSEl6ZklQTzVsc2pzN1lQaFBfZEQ2aExXUmVNWDFRX0x5MVdyMWNRcWxiejFfYm5mZ0FLUXZzdmVrUnZUckthaUhpZUJkNFhSNzVPVjJVQ2JpSzVYdmdyYmtaRFh3NGhhZnJJMUNiQ3VHeWx2LXgwNHI4NDlRcDFJTkozaDBQTlMtM1BxVVRDNzZRN1ZaVnRRT2JJLXc3WGtHZ1U0TngxMS1kZkVDbnNNUFZTR0VmS19NNlA3SEpTQkotZk9mYmhZVVYySDFETTYwYnJRZW42Y280Z1RxNThWUmtvUWE1SENPQ0RuTTdWVng2SjlsQXExOHNVdXdic3pUbXdRQ0R0dmZpMDl4eWxEV1pYeXlaVjM0dmZjNXJzb3dON0VIdFFKeU1LNTFucG5vNm1GWWx6bVRHM3ZUd1BtWi13UzhKZTI5bnlDTTlzMkVVdDA1NUNmcDZyMVd6Z0VCM2tlSVU2eFdXejdycFNFWG5XQVVNYXRBdWxhT0V0c3EwVmZMd2M5WG9uUQ==","email":"pasiasv@gmail.com"}}}
EOF

CPUS=16 MEMORY=65536 DISK=200 make crc

sudo cp -a /home/cloud-user/.crc/cache/crc_libvirt_4.15.14_amd64/oc /usr/bin/oc && eval $(crc oc-env)
#crc console --credentials
oc login -u kubeadmin -p 12345678 https://api.crc.testing:6443
oc get pods -A

sudo dnf -y install ansible-core
make download_tools

make crc_attach_default_interface
EDPM_TOTAL_NODES=2 make edpm_compute

sudo virsh list

ssh 192.168.124.100 -i ~/install_yamls/out/edpm/ansibleee-ssh-key-id_rsa -l cloud-admin

cd .. && make crc_storage && make input
#oc get csv

curl -LO "https://dl.k8s.io/release/$(curl -LS https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && chmod +x ./kubectl && mv kubectl ~/bin && \
curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash && mv kustomize ~/bin

make openstack

# All openstack operators should appear in phase 'Succeeded'
oc get csv -n openstack-operators
oc get pods

make openstack_deploy

# It will show status 'Setup Complete' when all the services as running
oc get openstackcontrolplane -n openstack
oc get pods -n openstack

oc get deployments -n openstack
oc get statefulset -n openstack
oc get csv -n openstack

DATAPLANE_TOTAL_NODES=2 make edpm_wait_deploy

oc get openstackdataplanedeployment
oc get openstackdataplanenodeset

oc get pods -n openstack | grep edpm
oc get pod |grep deployment

#Test the OpenStack deployment
oc rsh openstackclient
openstack compute service list
openstack network agent list
openstack endpoint list

cd ~/install_yamls/devsetup
make edpm_deploy_instance

oc rsh openstackclient openstack server list

######################## Delete ########################################################
# Destroy the already installed cluster
########################################################################################
kcli delete vm ocp -y
